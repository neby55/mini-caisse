version: "3"

services:  
  db:
    image: postgres
    restart: always
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_MULTIPLE_DATABASES: ${DB_DATABASE},${DB_DATABASE_TEST}

  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DESIGN=galkaev
    ports:
      - 8080:8080
    depends_on:
      - db
  
  # backend:
  #   build: ./backend
  #   ports:
  #     - 8001:80
  #     - 6001:6001
  #   stdin_open: true
  #   tty: true
  #   volumes:
  #     - ./backend:/var/www/html
  #   environment:
  #     - DB_CONNECTION=${DB_CONNECTION}
  #     - DB_HOST=${DB_HOST}
  #     - DB_PORT=${DB_PORT}
  #     - DB_DATABASE=${DB_DATABASE}
  #     - DB_USERNAME=${DB_USERNAME}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #   depends_on:
  #     - db
  backend:
    build: ./backend-python
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./backend-python:/code
    ports:
      - 8001:8001
    environment:
      - POSTGRES_NAME=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
  
  frontend:
    build: ./frontend
    user: node
    ports:
      - 3000:3000
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/frontend
    command: "npm run dev"
